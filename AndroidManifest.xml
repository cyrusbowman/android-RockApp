<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="edu.purdue.rockapp"
    android:versionCode="1"
    android:versionName="1.0">

    <!-- We use ActionBar (with no fall back) so we require Android 3.0 or greater -->
    <uses-sdk android:minSdkVersion="11" />
    
    <!-- Setup a ROCKS permission with arbitrates access to the rocks content provider -->
    <permission 
        android:name="edu.purdue.libwaterapps.permission.ROCKS"
        android:label="@string/rock_perm_label"
        android:description="@string/rock_perm_desc"
        android:protectionLevel="normal" />
    
    <!-- Map needs GPS (Fine and Coarse) to place rocks. -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!-- Need Internet to download Google Map tiles -->
    <uses-permission android:name="android.permission.INTERNET" />
	<!-- Need to write images to after taking rock pictures -->    
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!-- We require permission to access the rocks content provider -->
    <uses-permission android:name="edu.purdue.libwaterapps.permission.ROCKS" />
    

    <!-- RockApp application -->
    <application android:label="@string/app_name"
        android:icon="@drawable/ic_launcher" android:theme="@android:style/Theme.Holo">
        
        <!-- Include the google maps library -->
       	<uses-library android:name="com.google.android.maps" /> 
       	
       	<!-- RockApp is responsible for hosting the rocks content provider. Tell android about it here. -->
       	<provider android:authorities="edu.purdue.libwaterapps.provider"
       	    android:name="edu.purdue.libwaterapps.provider.RockProvider" android:exported="true" 
       	    android:permission="edu.purdue.libwaterapps.permission.ROCKS" android:enabled="true" />
       	
       	<!-- Main screen activity (displays the map, add/remove rocks, select and edit rock meta data, and get list of rocks -->
        <activity android:name="RockAppActivity"
                  android:windowSoftInputMode="adjustResize|stateHidden"
                  android:label="@string/app_name">
             
            <intent-filter>
                <!-- This is a real application, so allow it to launch and put it in the application listing -->
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

    </application>

</manifest>
